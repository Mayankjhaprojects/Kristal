const mongoose = require('mongoose');

const FundSchema = new mongoose.Schema({
  fundName: { type: String, required: true },
  fundCode: { type: String, required: true, unique: true },
  DATE: { type: Date },
  DOCUMENTS_FOLDER: {
    type: String,
    validate: {
      validator: v => /^(ftp|http|https):\/\/[^ "]+$/.test(v),
      message: props => `${props.value} is not a valid URL!`
    },
  },
  KRISTAL_TICKER: { type: String },
  CREDIBILITY_BAND: { type: String },
  PAC_DECISION: { type: String },
  COUNTRIES_APPROVED_FOR: { type: String },
  PAC_DECISION_RATIONALE: { type: String },
  IS_PART_OF_PAC_FOCUS_LIST_YES_NO: { type: String },
  PAC_FOCUS_LIST_DECISION_RATIONALE: { type: String },
  FORWARD_LOOKING_PAC_VIEW: {
  type: Number,
  min: -2,
  max: 2
},
  EXPECTED_RETURNS: { type: String },
  SHOULD_FUND_BE_INCLUDED_IN_THE_MODEL_PORTFOLIO: { type: String },
  RANK: { type: String },
  CAGR: { type: Number },
  COMPLETE_RETURN: { type: Number },
  MAX_DRAWDOWN: { type: Number },
  CALMAR: { type: Number },
  TOTAL_NEGATIVE_RETURNS: { type: Number },
  TOTAL_POSITIVE_RETURNS: { type: Number },
  SHARPE: { type: Number },
  LAST_1_YEARS_SHARPE: { type: Number },
  LAST_2_YEARS_SHARPE: { type: Number },
  LAST_3_YEARS_SHARPE: { type: Number },
  SORTINO: { type: Number },
  LAST_1_YEARS_SORTINO: { type: Number },
  LAST_2_YEARS_SORTINO: { type: Number },
  LAST_3_YEARS_SORTINO: { type: Number },
  RETURN_2019: { type: Number },
  RETURN_2020: { type: Number},
  RETURN_2021: { type: Number},
  RETURN_2022: { type: Number },
  RETURN_2023: { type: Number },
  RETURN_2024: { type: Number },
  RETURN_2025: { type: Number },
  MIN_YEARLY_RETURNCAGR: { type: Number},
  YEARLY_VOLCAGR: { type: Number },
  MAR2020_RETURN: { type: Number},
  APR2022_RETURN: { type: Number },
  SEP2022_RETURN: { type: Number },
  POSITIVE_RETURN_MONTHS: { type: Number },
  VOL: { type: Number },
  LAST_1_YEARS_VOL: { type: Number },
  LAST_2_YEARS_VOL: { type: Number },
  LAST_3_YEARS_VOL: { type: Number },
  MAX_MIN_RETURN: { type: Number},
  KIRSTAL_NAME_AND_KRISTAL_ALIAS: { type: String },
  KRISTAL_UNIQUE_ID: { type: String },
  SPONSORED_BY: { type: String },
  HORIZON: { type: String },
  INVESTORS: { type: String },
  CURRENCY: { type: String },
  NAV: { type: Number },
  NET_ACCRUED: { type: Number },
  ISALLOWEDSUBSCRIPTION: { type: String },
  NAV_WITHOUT_ACCRUED: { type: Number},
  START_DATE: { type: Date },
  BENCHMARK: { type: String },
  STRATEGY_TYPE: { type: String },
  REQUIRED_BROKER: { type: String },
  KRISTAL_VISIBILITY: { type: String },
  SOURCE_KRISTAL_ID: { type: String },
  SOURCE_KRISTAL_NAME: { type: String },
  RESIDUAL_CASH_MULTIPLIER: { type: String },
  SOPHISTICATION: { type: String },
  FUND_DESCRIPTION: { type: String },
  ABOUT_THE_FUND: { type: String },
  REASON_TO_INVEST: { type: String },
  RISKS: { type: String },
  MONEY_MARKET_FUND: { type: String },
  DRAWDOWN_RISK: { type: String },
  ASSET_TYPE_EXPOSURE: { type: String },
  SUB_CATEGORY: { type: String },
  STYLE: { type: String },
  TARGET_IRR: { type: String },
  REGION: { type: String },
  IC_CATEGORY: { type: String },
  NOTE_BELOW_RETURNS: { type: String },
  SHARE_CLASS: { type: String },
  INVESTOR_CATEGORY: { type: String },
  FUND_AUM: { type: String },
  FUND_AUM_DATE: { type: Date },
  DISCLAIMER: { type: String },
  RISK_DISCLAIMER: { type: String },
  MINIMUM_TICK_SIZE: { type: Number },
  FUND_SOURCE: { type: String },
  FUND_MANAGED_BY: { type: String },
  ISIN: { type: String },
  FUND_MANAGER: { type: String },
  FUND_ADMIN_NAME: { type: String },
  AML_AGENT_NAME: { type: String },
  TOP_HOLDINGS: { type: String },
  DEALING_INFORMATION: { type: String },

//yaha se karna hai ab

  SUBSCRIPTION_MINIMUM_INITIAL: { type: Number },
  SUBSCRIPTION_MINIMUM_SUBSEQUENT: { type: Number },
  MINIMUM_HOLDING_VALUE: { type: Number},
  SUBSCRIPTION_FREQUENCY: { type: String },
  DEFAULT_NAV: { type: Number },
  REDEMPTION_FREQUENCY: { type: String },
  NO_OF_DECIMALS_ALLOWED_UNITS: { type: Number },
  LOCK_IN_PERIOD_FOR_REDEMPTION: { type: String },
  APPLICABLE_FROM: { type: String },
  DETAILS_OF_LOCK_IN: { type: String },
  FUND_HOUSE_DAYS_TYPE: { type: String },
  NOTICE_DAYS_BUY: { type: Number },
  NOTICE_DAYS_SELL: { type: Number },
  ISSUER: { type: String },
  ISSUER_DESCRIPTION: { type: String },
  PORTFOLIO_MANAGER: { type: String },
  FUND_MANAGER_AUM: { type: String },
  FUND_MANAGER_AUM_DATE: { type: Date },
  ISSUER_WEBSITE: {
    type: String,
    validate: {
      validator: v => /^(ftp|http|https):\/\/[^ "]+$/.test(v),
      message: props => `${props.value} is not a valid URL!`
    },
  },
  EXPENSE_RATIO: { type: String },
  FUND_SALES_CHARGE: { type: String },
  FUND_MANAGEMENT_FEE: { type: String },
  FUND_PERFORMANCE_FEE: { type: String },
  HURDLE_RATE: { type: String },
  HIGH_WATER_MARK: { type: String },
  FUND_REDEMPTION_FEE: { type: String },
  OTHER_CHARGES: { type: String },
  KRISTAL_ACCESS_FEE: { type: String },
  KRISTAL_PLATFORM_FEE: { type: String },
  REVENUE_TYPE: { type: String },
  WHITELISTING: { type: String },
  VERSION: {type: Number},
   embedding: {
    type: [Number], // vector from SentenceTransformer
    required: true,
  }
  
  

}, { timestamps: true });

module.exports = mongoose.model('Fund', FundSchema);
